name: Code Quality & Linting

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup node
        uses: ./.github/actions/node-setup

      - name: Install Node.js dependencies
        run: |
          pnpm install

      - name: Lint JavaScript files
        run: |
          # Lint JS files
          pnpm lint:js

      - name: Lint CSS files
        run: |
          # Lint CSS files
          pnpm lint:css

      - name: Lint HTML files
        run: |
          # Lint HTML files
          pnpm lint:html

      - name: Lint Markdown files
        run: |
          # Lint Markdown files
          pnpm lint:md

  lint-go:
    name: Lint Go Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: ./.github/actions/go-setup

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v2.5.00
          args: --timeout=5m

  build-go:
    name: Build Go Scripts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: ./.github/actions/go-setup

      - name: Build all Go scripts
        run: |
          echo "Building all Go scripts..."
          go build -o /tmp/server server.go
          go build -o /tmp/validate_data scripts/validate_data/validate_data.go
          go build -o /tmp/festival_updater scripts/festival_updater/festival_updater.go
          go build -o /tmp/band_updater scripts/band_updater/band_updater.go
          go build -o /tmp/minify_css scripts/minify_css/minify_css.go
          go build -o /tmp/minify_js scripts/minify_js/minify_js.go
          go build -o /tmp/minify_html scripts/minify_html/minify_html.go
          go build -o /tmp/minify_json scripts/minify_json/minify_json.go
          echo "âœ… All Go scripts compiled successfully"

  validate:
    name: Validate json files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup node
        uses: ./.github/actions/node-setup

      - name: Set up Go
        uses: ./.github/actions/go-setup

      - name: Validate JSON files
        run: |
          # Validate JSON files
          pnpm validate

  update-festivals-check:
    name: Check Festival Updater
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: ./.github/actions/go-setup

      - name: Run festivals updater in dry run mode
        run: |
          # Run festival updater in dry run mode
          go run scripts/festival_updater/festival_updater.go --dry-run

  update-bands-check:
    name: Check Bands Updater
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: ./.github/actions/go-setup

      - name: Run bands updater in dry run mode
        run: |
          # Run bands updater in dry run mode
          go run scripts/band_updater/band_updater.go --dry-run

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
